1. I cloned diffutils as below and moved into the directory.
$ git clone https://git.savannah.gnu.org/git/diffutils.git 
$ cd diffutils

2. I generated a copy of the log using git log:
$ git log > ../git-log.txt

3. I generated a list of tags using git tag:
$ git tag > ../git-tags.txt

4. I used grep to locate the desired commit. I then added a -B flag to show lines before the title. After trying different numbers, I found that -B 4 is just enough to show the commit hash.
$ grep "maint: quote" git-log.txt -B 4
    commit 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
    Author: Paul Eggert <eggert@cs.ucla.edu>
    Date:   Wed Jan 25 23:46:16 2012 -0800

    maint: quote 'like this' or "like this", not `like this'

    This is in response to a recent change in the GNU coding standards,
    which now suggest quoting 'like this' or "like this", instead of
    `like this' or ``like this''.
I then generated a patch using the below:
$ git format-patch -1 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
    0001-maint-quote-like-this-or-like-this-not-like-this.patch
Renamed patch file according to spec:
$ mv 0001-maint-quote-like-this-or-like-this-not-like-this.patch quote-patch.txt

5. I then used a similar grep command as above to find the commit hash of version 3.0.
$ grep "version 3.0" git-log.txt -B 4
    commit 022cd5c5eb647a22a4daa5fe5cbc10af6d5a1112
    Author: Jim Meyering <meyering@redhat.com>
    Date:   Mon May 3 18:49:55 2010 +0200

        version 3.0
I checked out the commit using
$ git checkout 022cd5c5eb647a22a4daa5fe5cbc10af6d5a1112

6. I applied the patch using the patch command and recorded the errors:
$ patch -p1 < quote-patch.txt
    ...
    Hunk #10 FAILED at 876.
    Hunk #11 FAILED at 906.
    Hunk #12 FAILED at 942.
    3 out of 14 hunks FAILED -- saving rejects to file src/diff.c.rej
    ...
    Hunk #6 FAILED at 433.
    1 out of 9 hunks FAILED -- saving rejects to file src/diff3.c.rej
    ...

7. I then checked git status:
$ git status
    HEAD detached at 022cd5c
    Changes not staged for commit:
      (use "git add <file>..." to update what will be committed)
      (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   NEWS
        modified:   README
        modified:   TODO
        modified:   doc/diagmeet.note
        modified:   ms/config.bat
        modified:   ms/config.site
        modified:   po/en.po
        modified:   src/analyze.c
        modified:   src/cmp.c
        modified:   src/context.c
        modified:   src/diff.c
        modified:   src/diff.h
        modified:   src/diff3.c
        modified:   src/dir.c
        modified:   src/ifdef.c
        modified:   src/io.c
        modified:   src/sdiff.c
        modified:   src/side.c
        modified:   src/system.h
        modified:   src/util.c
        modified:   tests/help-version

    Untracked files:
    (use "git add <file>..." to include in what will be committed)

        NEWS.orig
        README-hacking.orig
        README-hacking.rej
        README.orig
        README.rej
        cfg.mk.orig
        cfg.mk.rej
        ms/config.site.orig
        quote-patch.txt
        src/cmp.c.orig
        src/context.c.orig
        src/diff.c.orig
        src/diff.c.rej
        src/diff.h.orig
        src/diff3.c.orig
        src/diff3.c.rej
        src/dir.c.orig
        src/sdiff.c.orig
        src/system.h.orig
        src/util.c.orig
        tests/help-version.orig

    no changes added to commit (use "git add" and/or "git commit -a")

8.

9. I inspected the git status output above and reverted all the non .c files. I used vc-revert (C-x v u) in emacs then confirmed by typing yes when prompted. These are the files I reverted:
    NEWS
    README
    TODO
    doc/diagmeet.note
    ms/config.bat
    ms/config.site
    po/en.po
    src/diff.h
    src/system.h
    tests/help-version

I then inspected the c files using vc-diff (C-x v =) and reverted hunks using diff-apply-hunk (C-c C-a)
    src/analyze.c - reverted using vc-revert 
    src/cmp.c - reverted quotes in comments using diff-apply-hunk
    src/context.c - reverted using vc-revert
    src/diff.c - reverted quotes in comments using diff-apply-hunk
    src/diff3.c - reverted quotes in comments using diff-apply-hunk
    src/dir.c - reverted quotes in comments
    src/ifdef.c - reverted using vc-revert
    src/io.c - reverted using vc-revert
    src/sdiff.c - reverted quotes in comments using diff-apply-hunk
    src/side.c - reverted using vc-revert
    src/util.c - reverted quotes in comments using diff-apply-hunk

10. I used ls to find the .c.rej files:
$ ls src/*.c.rej
    src/diff.c.rej  src/diff3.c.rej
I then copied the changes in the files manually to the original files.

11. I removed the untracked files using
$ git clean -f

12. I ran "git status" again to verify the changed files, and it indeed shows only half a dozen files.
$ git status
    ...
    modified:   src/cmp.c
    modified:   src/diff.c
    modified:   src/diff3.c
    modified:   src/dir.c
    modified:   src/sdiff.c
    modified:   src/util.c
    ...
I then ran git diff and exported the diff into a txt file as specified
$ git diff > quote-3.0-patch.txt

I verified the number of lines of the file using wc -l
$ cat quote-3.0-patch.txt | wc -l
    335

13. I ran the commands as specified in README-hacking
$ ./bootstrap
$ ./configure
$ make
$ make check